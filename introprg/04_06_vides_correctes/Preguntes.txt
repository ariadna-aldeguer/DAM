Exercici 04_06. Vides sempre correctes
#####################################

* autor/a: «Ariadna Aldeguer»

* data: «18 Mar 2021»

Introducció
===========

En aquest exercici .. 

Codi
====

El codi a analitzar és el següent:

::

    public class GatRenat {
        private int vides = 7;
        public int getVides() {  //  retorna el nombre de vides
            return vides;
        }
        public void setVides(int novesVides) {   // modifica el nombre de vides si ens donen un de vàlid
            if (novesVides >= 0) {
                vides = novesVides;
            }
        }
    }

Pregunta 1
==========

Què passa si intentes executar el següent codi? Perquè creus?

    public class UsaGatRenat {
        public static void main(String[] args) {
            GatRenat renat = new GatRenat();
            System.out.println("El gat Renat té " + renat.vides + " vides");
        }
    }

«Com la propietat vides és privada, UsaGatRenat no pot accedir»

Pregunta 2
==========

Què tal si modifiquem lleugerament el codi anterior per aquest?

    public class UsaGatRenat {
         public static void main(String[] args) {
             GatRenat renat = new GatRenat();
             System.out.println("El gat Renat té " + renat.getVides() + " vides");
         }
     }
Fixa’t que ara estem fent servir renat.getVides() en comptes de directament renat.vides(). Funciona ara?

«Ara sí que funciona. Per què ho esta agafant del métode setVides que és públic»

Pregunta 3
==========

Com es pot determinar a UsaGatRenat que renat té 5 vides?
Inclou el codi a la resposta i la sortida que et genera.

«Posant setVides a 5»

 public class UsaGatRenat {
     public static void main(String[] args) {
         GatRenat renat = new GatRenat();
         renat.setVides(5);
         System.out.println("El gat Renat té " + renat.getVides() + " vides");
     }
 }
 
 Sortida: El gat Renat té 5 vides


Pregunta 4
==========

Què passa si intentem assignar-li -12 en comptes de 5 vides?
Inclou el codi, la sortida i la teva explicació.

 public class UsaGatRenat {
     public static void main(String[] args) {
         GatRenat renat = new GatRenat();
         renat.setVides(-12);
         System.out.println("El gat Renat té " + renat.getVides() + " vides");
     }
 }
 
 Sortida: El gat Renat té 7 vides

 «Creec que realment no pasa res, a setVides hi ha una limitació de 0, al ser -12, no fa res,
 i continua tenint les 7 vides inicials»


Pregunta 5
==========

Un cop hem vist què passa des de UsaGatRenat toca experimentar com es comporta aquest private des del main() del propi GatRenat.

Experimenta afegint a la darrera versió de GatRenat la mateixa declaració de main() que apareixia a la primera versió de UsaGatRenat d’aquesta pàgina. És a dir:

    public class GatRenat {
        private int vides = 7;
        public int getVides() {  //  retorna el nombre de vides
            return vides;
        }
        public void setVides(int novesVides) {   // modifica el nombre de vides si ens donen un de vàlid
            if (novesVides >= 0) {
                vides = novesVides;
            }
        }
        public static void main(String[] args) {
            GatRenat renat = new GatRenat();
            renat.vides = -12;
            System.out.println("El gat Renat té " + renat.vides + " vides");
        }
    }

Què passa en intentar compilar i executar aquesta versió? Perquè creus? Ho veus coherent?

 «Compila perfectament. Creec que com GatRenat pot accedir a la propietat vides directament,
 pots possar-li qualsevol valor»

Pregunta 6
==========

Considerant aquesta darrera versió de GatRenat, és possible aconseguir assignar un nombre de vides negatiu a una instància de GatRenat sense modificar el codi de la classe GatRenat? Perquè o Com?

 «No, ja que la propietat es variable i ha de passar per setVides()»

Pregunta 7
==========

Com descriuries el paper de public i private a les propietats d’una classe?

 «Private: protegeixen els valors que es poden possar a la propietat, només la classe pot accedir
  Públic: tothom pot accedir»

Pregunta 8
==========

Aquesta implementació de GatRenat disposa de getter i de setter. T’has plantejat què passaria si només en tingués getter? i si només en tingués setter? i si no en tingués cap dels dos?

 «Si només tinguessim getter, sería inmutable, no podrían variar la propietat.
  Si només tinguessim setter, podriem modificar-ho però no podriem veure quin valor té.»

Pregunta 9
==========

Per cert, t’has fixat que els mòduls getVides() i setVides() tenen una definició lleugerament diferent als mòduls que hem declarat fins ara en aquest curs? En concret, no els falta alguna cosa?

Si no se t’acut, considera revisar quan varem veure per primer cop un mòdul que no fos el main().

De moment només cal que identifiquis la petita diferència en la declaració, però si tens molta curiositat, experimenta què passa si declares getVides() de la mateixa manera que dibuixaQuadrat().

«Falta static»
