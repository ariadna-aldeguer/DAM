package com.example.demo.rest;

import java.sql.Date;
import java.util.Calendar;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.example.demo.dao.PresenciasDAO;
import com.example.demo.models.Presencia;

@RestController
@RequestMapping("/")  
public class ControllerRest {

	@Autowired 
 	private PresenciasDAO presenciasDAO;
	
	@PostMapping   
	public ResponseEntity<Presencia> crearPresencia(String name, double latitud, double longitud) { 
		
		double latAustria = 41.4161732; 
		double longAustria = 2.1991057;
		String comentario = "";
		boolean esta_dentro= distancia2(latAustria, longAutria, latitud, longitud) <25;
		
		if (esta_dentro) 
			comentario="Esta dentro del radio. Ha fichado";
		else
			comentario="Esta fuera del radio. No ha fichado";
		
		Presencia presencia = new Presencia(name, latitud, longitud, comentario, fecha);
		Presencia newPre = presenciasDAO.save(presencia);
		return ResponseEntity.ok(newPre);

	}
	
	@GetMapping("")   
	public ResponseEntity<List<Presencia>> getPresencias() { 
		List<Presencia> presencias = presenciasDAO.findAll();
		return ResponseEntity.ok(presencias);
	}

	@GetMapping(value="{name}")    //{name}  (DELETE)
	public ResponseEntity<List<Presencia>> getPresenciasBy(@PathVariable("name") String name) { 
		List<Presencia> presencias = presenciasDAO.findByName(name);
		return ResponseEntity.ok(presencias);
	}
	
	
	public static double distancia2(double lat1, double lng1, double lat2, double lng2) {
	    //double radioTierra = 3958.75;//en millas
	    double radioTierra = 6371;//en kilÃ³metros
	    double dLat = Math.toRadians(lat2 - lat1);
	    double dLng = Math.toRadians(lng2 - lng1);
	    double sindLat = Math.sin(dLat / 2);
	    double sindLng = Math.sin(dLng / 2);
	    double va1 = Math.pow(sindLat, 2) + Math.pow(sindLng, 2)
	            * Math.cos(Math.toRadians(lat1)) * Math.cos(Math.toRadians(lat2));
	    double va2 = 2 * Math.atan2(Math.sqrt(va1), Math.sqrt(1 - va1));
	    double distancia = radioTierra * va2;

	    return distancia*1000;
	}

	/*@RequestMapping(value="{productId}")   //productos/{productId} --> productos/1   
	public ResponseEntity<Producto> getProductoById(@PathVariable("productId") Long productId) { 
		Optional<Producto> optionalProducto = productosDAO.findById(productId);
		if (optionalProducto.isPresent()) {
			return ResponseEntity.ok(optionalProducto.get());
		}else {
			return ResponseEntity.noContent().build();
		}
	}*/
	
}
